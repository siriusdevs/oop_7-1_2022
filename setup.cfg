[flake8]

# Don't even try to analyze these :) :
extend-exclude =
  # No need to traverse egg info dir
  *.egg-info,
  # GitHub configs
  .github,
  # Cache files of MyPy
  .mypy_cache,
  # Cache files of pytest
  .pytest_cache,
  # Temp dir of pytest-testmon
  .tmontmp,
  # Occasional virtualenv dir
  .venv,
  # VS Code
  .vscode,
  # Temporary build dir
  build,
  # This contains sdists and wheels of proxy.py that we don't want to check
  dist,
  # Occasional virtualenv dir
  env,
  # Metadata of `pip wheel` cmd is autogenerated
  pip-wheel-metadata,

# IMPORTANT: avoid using ignore option, always use extend-ignore instead
# Completely and unconditionally ignore the following errors:
extend-ignore =
  I  # flake8-isort is drunk + we have isort integrated into pre-commit
  B009
  C812
  C819    # FIXME: inline trailing comma
  D100
  D202
  W291
  D101
  D102
  D103
  D105
  D106
  D107
  D203
  D205
  D208
  D209
  D212
  D213
  D300
  D400
  D401
  D402
  D403
  D404
  D405
  D407
  D412
  D413
  D415
  WPS238
  E722
  B001
  WPS112
  W293
  RST201
  DAR201
  RST301
  DAR401
  N817
  WPS420
  P101    # FIXME: format string with unindexed params
  PT009   # FIXME: pytest encourages use of `assert`
  PT018   # FIXME: use multiple `assert`s instead of one complex
  Q000    # FIXME: inconsistent double quotes use when single ones are needed
  Q001    # FIXME: use double quotes in multiline strings
  S101    # FIXME: assertions are thrown away in optimized mode, needs audit
  S404    # FIXME: `subprocess` use needs auditing
  S603    # FIXME: audit untrusted `subprocess.Popen` input
  S607    # FIXME: running subprocess with a non-absolute executable path
  WPS114  # FIXME: underscored numbers in var name
  WPS120  # FIXME: regular name w/ trailing underscore
  WPS202
  WPS306
  S311
  WPS220  # FIXME: deep code nesting
  WPS221  # FIXME: too big inline complexity / tested instructions
  WPS230  # FIXME: too many public instance attrs
  WPS231  # FIXME: insane complexity/code nesting in a function
  WPS232  # FIXME: module is too complex
  WPS234  # FIXME: annotation is too complex
  WPS235  # FIXME: too many imported names from a single module
  WPS237  # FIXME: too complex f-string
  WPS305  # this project is Python 3 only and so f-strings are allowed
  WPS313  # FIXME: parens after keyword
  WPS226
  WPS213
  WPS110
  WPS441
  WPS115
  WPS322  # FIXME: inline multiline str
  WPS323  # false-positive: %-formatting in logging
  WPS326  # doesn't allow implicit string concat
  WPS336  # FIXME: explicit string concat
  WPS337  # FIXME: multiline conditions
  WPS338  # FIXME: unordered class methods
  WPS361  # FIXME: inconsistent comprehension structure
  WPS457
  WPS407
  WPS111
  WPS414  # FIXME: consusing unpacking target
  WPS425  # FIXME: bool non-keyword arg
  WPS440  # FIXME: block vars overlap
  WPS454  # FIXME: don't raise a broad exception, use a specific one
  WPS504  # FIXME: invert a negated condition
  WPS508  # FIXME: misused `not` in if-clause
  WPS515  # FIXME: implicit `open()` w/o a CM
  WPS605  # FIXME: method w/o args

# https://wemake-python-stylegui.de/en/latest/pages/usage/formatter.html
format = wemake

# Let's not overcomplicate the code:
#max-complexity = 10
# FIXME: this is a lot!
max-complexity = 19

# Accessibility/large fonts and PEP8 friendly:
#max-line-length = 79
# Accessibility/large fonts and PEP8 unfriendly:
#max-line-length = 100
# Even more Accessibility/large fonts and PEP8 unfriendlier:
max-line-length = 127

# Allow certain violations in certain files:
per-file-ignores =

  # E800 reports a lot of false-positives for legit
  # tool-related comments;
  # WPS412 logic of an extension is in __init__.py file;
  # FIXME: WPS201 too many imports
  # FIXME: WPS402 too many `noqa`s
  #proxy/__init__.py: E800, WPS201, WPS402, WPS412

  # There are multiple `assert`s (S101)
  # and subprocesses (import – S404; call – S603) in tests;
  # also, using fixtures looks like shadowing the outer scope (WPS442);
  # and finally it's impossible to have <= members in tests (WPS202):
  tests/**.py: S101, S404, S603, WPS202, WPS442

# wemake-python-styleguide
show-source = true

# flake8-pytest-style
# PT001:
pytest-fixture-no-parentheses = true
# PT006:
pytest-parametrize-names-type = tuple
# PT007:
pytest-parametrize-values-type = tuple
pytest-parametrize-values-row-type = tuple
# PT023:
pytest-mark-no-parentheses = true

# flake8-rst-docstrings
rst-directives =
  spelling
rst-roles =
  # Built-in Sphinx roles:
  class,
  data,
  exc,
  meth,
  term,
  py:class,
  py:data,
  py:exc,
  py:meth,
  py:term,
  # Sphinx's internal role:
  event,
